syntax = "proto3";
package malstrom_k8s;

// API for interaction between the Kubernetes operator and the malstrom runtime
service OperatorAPI {
    // Will return 2 responses, one intial status to confirm the rescale has started
    // and a second response with the finished status
    rpc Rescale(RescaleRequest) returns (stream RescaleResponse) {}
    rpc GetScalingStatus(GetScalingStatusRequest) returns (GetScalingStatusResponse) {}
}

message GetScalingStatusRequest {}
message GetScalingStatusResponse {
    ScalingStatus status = 1;
    int32 current_scale = 2;
}

message RescaleRequest {
    // how the size of the cluster should be changed, e.g. -1 to remove a worker
    // or 4 to add four workers
    int32 size_change = 1;
}

message RescaleResponse {
    ScalingStatus status = 1;
    int32 current_scale = 2;
    int32 desired_scale = 3;
}

enum ScalingStatus {
    SCALING_STATUS_UNSPECIFIED = 0;
    NOT_SCALING = 1;
    SCALING_UP = 2;
    SCALING_DOWN = 3;
}
