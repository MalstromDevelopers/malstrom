syntax = "proto3";

package malstrom_k8s.k8s_operator;

// Job coordinator hosts this service to interact with the
// K8S operator
service CoordinatorOperatorService {
    // request a rescale from the job coordinator
    // the response is sent as soon as the rescale completed
    rpc Rescale (RescaleRequest) returns (RescaleResponse);
    // Check the status on the coordinator
    rpc GetStatus (GetStatusRequest) returns (GetStatusResponse);
  }

message RescaleRequest {
    uint64 desired_scale = 1;
}

message RescaleResponse {}

message GetStatusRequest {}

message GetStatusResponse {
    JobStatus status = 1;
}

enum JobStatus {
    JOB_STATUS_UNSPECIFIED = 0;
    // The job will be in this state until all workers
    // are online and have started execution
    STARTING = 1;
    RUNNING = 2;
    // job is currently taking a snapshot
    SNAPSHOTTING = 3;
    // job is currently rescaling
    RESCALING = 4;
    // job is suspending
    SUSPENDING = 5;
    // job is suspended
    SUSPENDED = 6;
}