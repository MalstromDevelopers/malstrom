
PersistentStateScope {
    text: |md Timestamps of type `StateEpoch`|

    state_provider {
        text: |md calls `load_state` and `save_state`|
    }
    splitter {
        text: |md splits state and data|
    }
    user_function {
        text: |md called repeatedly to produce data|
    }
}

once {
    text: |md Closure which emits a value once to start the dataflow|
} 
once -> PersistentStateScope.state_provider
PersistentStateScope.state_provider -> PersistentStateScope.user_function
PersistentStateScope.user_function -> PersistentStateScope.splitter: (data, state)
PersistentStateScope.splitter -> PersistentStateScope.state_provider: state
PersistentStateScope.splitter -> downstream: data